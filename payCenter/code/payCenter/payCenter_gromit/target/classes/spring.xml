<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"  
	xsi:schemaLocation=" http://www.springframework.org/schema/beans
							     	 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
							     	 http://www.springframework.org/schema/context     
							     	 http://www.springframework.org/schema/context/spring-context-3.0.xsd
							     	 http://www.springframework.org/schema/tx
							     	 http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
							     	 http://www.springframework.org/schema/aop 
							     	 http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
 <!-- table id 的生成 -->						     	 
	<bean id="tableIdGenerate" class="com.ttmv.datacenter.paycenter.dao.implement.util.TableIdGenerate">
		<constructor-arg ref="generator32" />
	</bean>
	<bean id="tableIdGenerate64" class="com.ttmv.datacenter.paycenter.dao.implement.util.TableIdGenerate64">
		<constructor-arg ref="generator64" />
	</bean>	
	<!-- 配置properties -->
	
	<context:property-placeholder location="classpath:payCenter.all.properties" />
	
	<!-- 导入各个配置文件-->
	<import resource="spring-hbase-implement.xml"/> 
	<import resource="spring-mysql-implement.xml"/>
	<import resource="spring-redis-implement.xml"/>
	<import resource="spring-flow.xml"/>
	
	<!-- 配置sqlSessionFactoryBean；绑定mybatis -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver_m1}" />
		<property name="jdbcUrl" value="${jdbc.url_m1}" />
		<property name="user" value="${jdbc.username_m1}" />
		<property name="password" value="${jdbc.password_m1}" />
		<!--连接池中保留的最大连接数。默认值: 15 -->
		<property name="maxPoolSize" value="200"/>
		<!-- 连接池中保留的最小连接数，默认为：3-->
		<property name="minPoolSize" value="5"/>
		<!-- 当连接池连接耗尽时，客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException，如设为0则无限期等待。单位毫秒。默认: 0 -->
		<property name="checkoutTimeout" value="60000"/>
		<!--最大空闲时间，3600秒内未使用则连接被丢弃。若为0则永不丢弃。默认值: 0 -->
		<property name="maxIdleTime" value="3600"/>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:sql_config.xml" />
	</bean>
	
	 <!-- 配置事务；txManager事务管理 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	     
	<tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="initAccountMysql" propagation="REQUIRED" rollback-for="Exception"/>
        </tx:attributes>
    </tx:advice>
   
    <aop:config>  
        <aop:pointcut id="interceptorPointCuts"  expression="execution(* com.ttmv.datacenter.paycenter.dao.implement.mapper.*.*(..))" />  
        <aop:advisor advice-ref="txAdvice"  pointcut-ref="interceptorPointCuts" />          
    </aop:config> 
	
	

	 <!-- 配置事务；txManager事务管理 -->
	<!--<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="txManager">  
        <tx:attributes>  
            <tx:method name="add*" propagation="REQUIRED" />  
        </tx:attributes>  
    </tx:advice>  
      
    <aop:config>  
        <aop:pointcut id="interceptorPointCuts"  expression="execution(* com.ttmv.datacenter.paycenter.dao.implement.impl.*.*(..))" />  
        <aop:advisor advice-ref="txAdvice"  pointcut-ref="interceptorPointCuts" />          
    </aop:config>      -->
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.ttmv.datacenter.paycenter.daoimplement" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
	
	<!-- 2016年5月10日11:42:00 Damon 资金账户初始化  -->
	<bean id="initAccountDaoImpl" class="com.ttmv.datacenter.paycenter.dao.implement.impl.InitAccountDaoImpl">
		<property name="initAccountService" ref="initAccountService"/>
		<property name="tableIdGenerate" ref="tableIdGenerate"/>
	</bean>
	
	<bean id="accountInfoDaoImpl" class="com.ttmv.datacenter.paycenter.dao.implement.impl.AccountInfoDaoImpl">
		<property name="brokerageInfoDao" ref="brokerageInfoDaoImpl"/>
		<property name="tcoinInfoDao" ref="tcoinInfoDaoImpl"/>
		<property name="tquanInfoDao" ref="tquanInfoDaoImpl"/>
		<property name="tableIdGenerate" ref="tableIdGenerate"/>
	</bean>
	
	<bean id="brokerageInfoDaoImpl" class="com.ttmv.datacenter.paycenter.dao.implement.impl.BrokerageInfoDaoImpl">
		<property name="addBrokerageInfoService" ref="addBrokerageInfoService"/>
		<property name="queryBrokerageInfoService" ref="queryBrokerageInfoService"/>
		<property name="updateBalanceBrokerageInfoService" ref="updateBalanceBrokerageInfoService"/>
		<property name="updateFreezeBalanceBrokerageInfoService" ref="updateFreezeBalanceBrokerageInfoService"/>
	</bean>
	
	<bean id="tcoinInfoDaoImpl"  class="com.ttmv.datacenter.paycenter.dao.implement.impl.TcoinInfoDaoImpl">
		<property name="addTcoinInfoService" ref="addTcoinInfoService"/>
		<property name="queryTcoinInfoService" ref="queryTcoinInfoService"/>
		<property name="updateBalanceTcoinInfoService" ref="updateBalanceTcoinInfoService"/>
		<property name="updateFreezeBalanceTcoinInfoService" ref="updateFreezeBalanceTcoinInfoService"/>
	</bean>
	
	<bean id="tquanInfoDaoImpl" class="com.ttmv.datacenter.paycenter.dao.implement.impl.TquanInfoDaoImpl">
		<property name="addTquanInfoService" ref="addTquanInfoService"/>
		<property name="queryTquanInfoService" ref="queryTquanInfoService"/>
		<property name="updateBalanceTquanInfoService" ref="updateBalanceTquanInfoService"/>
		<property name="updateFreezeBalanceTquanInfoService" ref="updateFreezeBalanceTquanInfoService"/>
	</bean>
</beans>